"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = sectionCreate;
const inquirer_1 = __importDefault(require("inquirer"));
const ShopifyLiquid_1 = __importDefault(require("../writers/ShopifyLiquid"));
const ShopifyAssetCreator_1 = __importDefault(require("../writers/ShopifyAssetCreator"));
const ShopifyTrans_1 = __importDefault(require("../writers/ShopifyTrans"));
function sectionCreate() {
    inquirer_1.default
        .prompt([
        {
            type: "input",
            name: "prefix",
            message: "Prefix *:",
            default: "nova",
            validate: (value) => {
                return value ? true : "Prefix can't be empty";
            },
        },
        {
            type: "input",
            name: "sectionFileName",
            message: "Section filename *:",
            default: "your-section-name",
            validate: (value) => {
                return value ? true : "Section filename can't be empty";
            },
        },
        {
            type: "confirm",
            name: "generateCss",
            message: "Do you want to generate CSS file?",
            default: true,
        },
        {
            type: "confirm",
            name: "generateJs",
            message: "Do you want to generate JS file?",
            default: false,
        },
        {
            type: "confirm",
            name: "hasBaseSetting",
            message: "Do you want to add base settings (Header & content)?",
            default: true,
        },
        {
            type: "confirm",
            name: "hasPaddingSetting",
            message: "Do you want to add padding settings?",
            default: true,
        },
    ])
        .then((answers) => {
        const liquid = new ShopifyLiquid_1.default(answers.prefix, answers.sectionFileName);
        const assetCreator = new ShopifyAssetCreator_1.default(answers.prefix, answers.sectionFileName);
        const trans = new ShopifyTrans_1.default(answers.prefix, answers.sectionFileName, [
            "en",
        ]);
        liquid.validateDestinationNotExists();
        if (answers.generateJs) {
            liquid.addJsImport();
            assetCreator.createJs();
        }
        if (answers.generateCss) {
            liquid.addStyleSheetImport();
            assetCreator.createCss();
        }
        liquid
            .createSection(answers.hasBaseSetting, answers.hasPaddingSetting)
            .save();
        trans.addDefaultSectionSettings();
    })
        .catch((error) => {
        if (error.name !== "ExitPromptError") {
            console.log(error);
        }
    });
}

#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const inquirer_1 = __importDefault(require("inquirer"));
const sectionCreate_1 = __importDefault(require("./commands/sectionCreate"));
const sectionDuplicate_1 = __importDefault(require("./commands/sectionDuplicate"));
const sectionSettingAdd_1 = __importDefault(require("./commands/sectionSettingAdd"));
const sectionBlockAdd_1 = __importDefault(require("./commands/sectionBlockAdd"));
const libreTranslateClient_1 = require("./clients/libreTranslateClient");
const settings_1 = require("./settings");
async function run() {
    validateDevDependency();
    await validateTranslationService();
    const commands = {
        "section:create": sectionCreate_1.default,
        "section:duplicate": sectionDuplicate_1.default,
        "section:setting:add": sectionSettingAdd_1.default,
        "section:block:add": sectionBlockAdd_1.default,
    };
    try {
        const command = process.argv[2] ||
            (await inquirer_1.default.prompt([
                {
                    type: "list",
                    name: "command",
                    message: "Command:",
                    default: "section:create",
                    choices: Object.keys(commands),
                },
            ])).command;
        commands[command]();
    }
    catch (error) { }
}
async function validateTranslationService() {
    if (!(await libreTranslateClient_1.libreTranslateClient.isAvailable())) {
        console.log("\x1b[33m", `Warning: translation service is unavaiable. Run: docker run -tid --rm -p 5000:5000 libretranslate/libretranslate --load-only=${settings_1.settings.supportedLanguages.join(",")}\n`);
    }
}
function validateDevDependency() {
    const packageJsonPath = path_1.default.resolve(process.cwd(), "package.json");
    const packageName = "shopify-theme-tools";
    const data = fs_1.default.readFileSync(packageJsonPath, "utf-8");
    const packageJson = JSON.parse(data);
    if (!packageJson.devDependencies ||
        !packageJson.devDependencies[packageName]) {
        console.log("\x1b[33m", `Warning: ${packageName} should be install as devDependencie. Run: npm i --save-dev ${packageName}\n`);
    }
}
run();
